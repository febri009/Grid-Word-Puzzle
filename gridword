#include <stdio.h>

int size = 0;

int search_hor_up(char words[][5], char search[])
{
	int count =0;
	for(int i=4; i>=0; i--)
	{
		for(int j=4; j>=0; j--)
		{
			if(search[0]== words [i][j] && j-size+1 >= 0)
			{
				int flag 0;
				for(int k=0; k<size; k++)
				{
					if(search[k] != words[i][j-k])
					{
						flag 0;
						break;
					}
					else flag = 1;
				}
				if(flag
				count++;
				}
			}
		}
		return count;
	}


int search_hor_down(char words[][5], char search[])
{
	int count =0;
	for (int i=0; i<5; i++)
	{
		for (int j=0; j<5; j++)
		{
			if(search[0]==words[i][j] && (j+size) <= 5)
			{
				int flag= 0;
				for (int k=0; k<size; k++)
				{
					if(search[k] != words[i][j+k])
					{
						flag = 0;
						break;
					}
					else flag = 1;
				}
				if(flag == 1)
				count++;
			}
		}
	}
	return count;
}

int search_ver_down (char words[][5], char search[])
{
	int count =0;
	for (int i=0; i<5; i++)
	{
		for(int j=0; j<5; j++)
		{
			if(search[0]== words [j][i] && (j+size) <= 5)
			{
				int flag = 0;
				for(int k=0; k<size; k++)
				{
					if(search[k] != words[j+k][i])
					{
						flag = 0;
						break;
					}
					else flag = 1;
				}
				if(flag == 1)
				count++;
			}
		}
	}
	return count;
}

int search_ver_up(char words[][5], char search[])
{
	int count =0;
	for (int i=4; i>=0; i--)
	{
		for (int j=4; j>=0; j--)
		{
			if(search[0]== words[j][i] && j-size+1 >= 0)
			{
				int flag = 0;
				for(int k=0; k<size; k++)
				{
					if(search[k] != words[j-k][i])
					{
						flag = 0;
						break;
					}
					else flag = 1;
				}
				if(flag == 1)
				count++;
			}
		}
	}	
	return count;
}


int main()
{
	char words[5][5];
	printf("Grid Word: \n\n");
	for (int i=0; i<5; i++)
	{
		scanf("%s", words[i]);
	}
	char search[5];
	printf("\nSearch Word: ");
	scanf("%s", search);


	for(int i=0; search[i]!='\0'; i++)
	size++;


	int result= search_hor_up(words, search) +search_hor_down(words, search) + search_ver_down (words, search) + search_ver_up(words, search);
	printf("%d", result);

return 0;
}

